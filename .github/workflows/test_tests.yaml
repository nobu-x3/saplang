
# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: tests

on:
  push:
    branches: [ autobuilder ]

concurrency:
  # Cancels pending runs when a PR gets updated.
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

permissions:
  # Sets permission policy for `GITHUB_TOKEN`
  contents: read

jobs:
  arm64-linux-debug:
    timeout-minutes: 420
    runs-on: [self-hosted, Linux, ARM64]
    outputs:
      current_sha: ${{ steps.get-sha.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and Test
        run: sh ci/arm64-linux-debug-tests.sh

      - name: Get current SHA (Debug)
        id: get-sha
        run: |
          echo "Current SHA: $(git rev-parse HEAD)"
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  save_result_sha:
    needs: arm64-linux-debug
    runs-on: [self-hosted, Linux, ARM64]
    if: ${{ always() && needs.arm64-linux-debug.result == 'success' }}
    steps:
      - name: Save last success SHA
        run: echo ${{ needs.arm64-linux-debug.outputs.current_sha }} > .last_nightly_sha

      - name: Cache last success SHA
        uses: actions/cache@v3
        with:
          path: .last_nightly_sha
          key: last-nightly-sha-main
